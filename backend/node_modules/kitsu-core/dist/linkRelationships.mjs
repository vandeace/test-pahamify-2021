import{deattribute as i}from"./deattribute.mjs";import"./error.mjs";import{filterIncludes as t}from"./filterIncludes.mjs";function s({id:s,type:n,meta:e},o){const a=t(o,{id:s,type:n});return a.relationships&&r(a,o),e&&(a.meta=e),i(a)}function n(i,t,n){i[n]={},i.relationships[n].links&&(i[n].links=i.relationships[n].links),i[n].data=[];for(const e of i.relationships[n].data)i[n].data.push(s(e,t));delete i.relationships[n]}function e(i,t,n){i[n]={},i[n].data=s(i.relationships[n].data,t),i.relationships[n].links&&(i[n].links=i.relationships[n].links),delete i.relationships[n]}function o(i,t){i[t]={},i.relationships[t].links&&(i[t].links=i.relationships[t].links),delete i.relationships[t]}function r(i,t=[]){const{relationships:s}=i;for(const a in s){var r;Array.isArray(null===(r=s[a])||void 0===r?void 0:r.data)?n(i,t,a):s[a].data?e(i,t,a):o(i,a)}return 0===Object.keys(s||[]).length&&(null==s?void 0:s.constructor)===Object&&delete i.relationships,i}export{r as linkRelationships};
