import{camel as a,snake as s,kebab as e,query as t,deserialise as r,error as i,splitModel as h,serialise as l}from"kitsu-core";import p from"axios";import o from"merge-options";import c from"pluralize";export default class{constructor(t={}){!1===t.camelCaseTypes?this.camel=a=>a:this.camel=a,"none"===t.resourceCase?this.resCase=a=>a:"snake"===t.resourceCase?this.resCase=s:this.resCase=e,!1===t.pluralize?this.plural=a=>a:this.plural=c,this.headers=o({Accept:"application/vnd.api+json","Content-Type":"application/vnd.api+json"},t.headers),this.axios=p.create(o({baseURL:t.baseURL||"https://kitsu.io/api/edge",timeout:t.timeout||3e4},t.axiosOptions)),this.fetch=this.get,this.update=this.patch,this.create=this.post,this.remove=this.delete,this.interceptors=this.axios.interceptors}async get(a,s={}){try{const e=o(this.headers,s.headers),i=o({},s.params),[h,l,p]=a.split("/");let c=this.plural(this.resCase(h));l&&(c+="/".concat(l)),p&&(c+="/".concat(this.resCase(p)));const{data:d}=await this.axios.get(c,{headers:e,params:i,paramsSerializer:a=>t(a)});return r(d)}catch(a){throw i(a)}}async patch(a,s,e={}){try{const i=o(this.headers,e.headers),p=o({},e.params),[c,d]=h(a,{resourceCase:this.resCase,pluralModel:this.plural}),n=l(c,s,"PATCH",{camelCaseTypes:this.camel,pluralTypes:this.plural}),u=null!=s&&s.id?"".concat(d,"/").concat(s.id):d,{data:m}=await this.axios.patch(u,n,{headers:i,params:p,paramsSerializer:a=>t(a)});return r(m)}catch(a){throw i(a)}}async post(a,s,e={}){try{const i=o(this.headers,e.headers),p=o({},e.params),[c,d]=h(a,{resourceCase:this.resCase,pluralModel:this.plural}),{data:n}=await this.axios.post(d,l(c,s,"POST",{camelCaseTypes:this.camel,pluralTypes:this.plural}),{headers:i,params:p,paramsSerializer:a=>t(a)});return r(n)}catch(a){throw i(a)}}async delete(a,s,e={}){try{const r=o(this.headers,e.headers),i=o({},e.params),[p,c]=h(a,{resourceCase:this.resCase,pluralModel:this.plural});let d,n;Array.isArray(s)?(d=c,n=s.map((a=>({id:a})))):(d="".concat(c,"/").concat(s),n={id:s});const{data:u}=await this.axios.delete(d,{data:l(p,n,"DELETE",{camelCaseTypes:this.camel,pluralTypes:this.plural}),headers:r,params:i,paramsSerializer:a=>t(a)});return u}catch(a){throw i(a)}}async self(a={}){try{const s=o(this.headers,a.headers),e=o(a.params,{filter:{self:!0}});return(await this.get("users",o({headers:s},{params:e}))).data[0]}catch(a){throw i(a)}}async request({body:a,method:s,params:e,type:h,url:p,headers:c}){try{var d;s=(null===(d=s)||void 0===d?void 0:d.toUpperCase())||"GET";const{data:i}=await this.axios.request({method:s,url:p,data:["GET","DELETE"].includes(s)?void 0:l(h,a,s,{camelCaseTypes:this.camel,pluralTypes:this.plural}),headers:o(this.headers,c),params:e,paramsSerializer:a=>t(a)});return r(i)}catch(a){throw i(a)}}}
