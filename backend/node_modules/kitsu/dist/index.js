"use strict";var e=require("kitsu-core"),a=require("axios"),s=require("merge-options"),r=require("pluralize");function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var i=t(a),l=t(s),h=t(r);module.exports=class{constructor(a={}){!1===a.camelCaseTypes?this.camel=e=>e:this.camel=e.camel,"none"===a.resourceCase?this.resCase=e=>e:"snake"===a.resourceCase?this.resCase=e.snake:this.resCase=e.kebab,!1===a.pluralize?this.plural=e=>e:this.plural=h.default,this.headers=l.default({Accept:"application/vnd.api+json","Content-Type":"application/vnd.api+json"},a.headers),this.axios=i.default.create(l.default({baseURL:a.baseURL||"https://kitsu.io/api/edge",timeout:a.timeout||3e4},a.axiosOptions)),this.fetch=this.get,this.update=this.patch,this.create=this.post,this.remove=this.delete,this.interceptors=this.axios.interceptors}async get(a,s={}){try{const r=l.default(this.headers,s.headers),t=l.default({},s.params),[i,h,o]=a.split("/");let p=this.plural(this.resCase(i));h&&(p+="/".concat(h)),o&&(p+="/".concat(this.resCase(o)));const{data:c}=await this.axios.get(p,{headers:r,params:t,paramsSerializer:a=>e.query(a)});return e.deserialise(c)}catch(a){throw e.error(a)}}async patch(a,s,r={}){try{const t=l.default(this.headers,r.headers),i=l.default({},r.params),[h,o]=e.splitModel(a,{resourceCase:this.resCase,pluralModel:this.plural}),p=e.serialise(h,s,"PATCH",{camelCaseTypes:this.camel,pluralTypes:this.plural}),c=null!=s&&s.id?"".concat(o,"/").concat(s.id):o,{data:d}=await this.axios.patch(c,p,{headers:t,params:i,paramsSerializer:a=>e.query(a)});return e.deserialise(d)}catch(a){throw e.error(a)}}async post(a,s,r={}){try{const t=l.default(this.headers,r.headers),i=l.default({},r.params),[h,o]=e.splitModel(a,{resourceCase:this.resCase,pluralModel:this.plural}),{data:p}=await this.axios.post(o,e.serialise(h,s,"POST",{camelCaseTypes:this.camel,pluralTypes:this.plural}),{headers:t,params:i,paramsSerializer:a=>e.query(a)});return e.deserialise(p)}catch(a){throw e.error(a)}}async delete(a,s,r={}){try{const t=l.default(this.headers,r.headers),i=l.default({},r.params),[h,o]=e.splitModel(a,{resourceCase:this.resCase,pluralModel:this.plural});let p,c;Array.isArray(s)?(p=o,c=s.map((e=>({id:e})))):(p="".concat(o,"/").concat(s),c={id:s});const{data:d}=await this.axios.delete(p,{data:e.serialise(h,c,"DELETE",{camelCaseTypes:this.camel,pluralTypes:this.plural}),headers:t,params:i,paramsSerializer:a=>e.query(a)});return d}catch(a){throw e.error(a)}}async self(a={}){try{const e=l.default(this.headers,a.headers),s=l.default(a.params,{filter:{self:!0}});return(await this.get("users",l.default({headers:e},{params:s}))).data[0]}catch(a){throw e.error(a)}}async request({body:a,method:s,params:r,type:t,url:i,headers:h}){try{var o;s=(null===(o=s)||void 0===o?void 0:o.toUpperCase())||"GET";const{data:p}=await this.axios.request({method:s,url:i,data:["GET","DELETE"].includes(s)?void 0:e.serialise(t,a,s,{camelCaseTypes:this.camel,pluralTypes:this.plural}),headers:l.default(this.headers,h),params:r,paramsSerializer:a=>e.query(a)});return e.deserialise(p)}catch(a){throw e.error(a)}}};
